# Generated by Django 2.0.7 on 2018-09-24 12:23

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CacheAPI',
            fields=[
                ('cache_api_id', models.AutoField(primary_key=True, serialize=False)),
                ('base_url', models.URLField(max_length=800)),
                ('resource', models.CharField(max_length=200)),
                ('request_args', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=400), default=list, size=None)),
                ('request_kwargs', models.CharField(max_length=1000)),
                ('response_content', models.TextField(max_length=10000)),
                ('expiry', models.DateTimeField()),
            ],
            options={
                'db_table': 'ts_cacheapi',
            },
        ),
        migrations.CreateModel(
            name='GraphRule',
            fields=[
                ('graph_rule_id', models.AutoField(primary_key=True, serialize=False)),
                ('rule_name', models.CharField(max_length=1000, unique=True)),
                ('rule_packages', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=1000), default=list, size=None)),
                ('rule_languages', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=400), default=list, size=None)),
                ('created_on', models.DateTimeField()),
                ('rule_status', models.BooleanField(default=True)),
                ('rule_visibility_public', models.BooleanField(default=False)),
                ('created_by', models.EmailField(max_length=254, null=True)),
            ],
            options={
                'verbose_name': 'Graph Rule',
                'db_table': 'ts_graphrules',
            },
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('job_id', models.AutoField(primary_key=True, serialize=False)),
                ('job_uuid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('job_type', models.CharField(max_length=200)),
                ('job_start_time', models.DateTimeField()),
                ('job_end_time', models.DateTimeField(null=True)),
                ('job_yml_text', models.CharField(blank=True, max_length=2000, null=True)),
                ('job_log_json_str', models.TextField(blank=True, null=True)),
                ('job_result', models.NullBooleanField()),
                ('job_remarks', models.CharField(max_length=200, null=True)),
                ('job_params_json_str', models.TextField(blank=True, null=True)),
                ('job_output_json_str', models.TextField(blank=True, null=True)),
                ('triggered_by', models.EmailField(max_length=254, null=True)),
                ('job_visible_on_url', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'Job',
                'db_table': 'ts_jobs',
            },
        ),
        migrations.CreateModel(
            name='JobTemplate',
            fields=[
                ('job_template_id', models.AutoField(primary_key=True, serialize=False)),
                ('job_template_type', models.CharField(max_length=100, unique=True)),
                ('job_template_name', models.CharField(max_length=500)),
                ('job_template_desc', models.CharField(blank=True, max_length=1000, null=True)),
                ('job_template_params', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=1000), default=list, size=None)),
                ('job_template_json_str', models.TextField(blank=True, null=True)),
                ('job_template_last_accessed', models.DateTimeField(null=True)),
            ],
            options={
                'verbose_name': 'Job Template',
                'db_table': 'ts_jobtemplates',
            },
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('locale_id', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='Locale ID')),
                ('lang_name', models.CharField(max_length=400, unique=True, verbose_name='Language Name')),
                ('locale_alias', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Locale Alias')),
                ('locale_script', models.CharField(blank=True, max_length=100, null=True, verbose_name='Locale Script')),
                ('lang_status', models.BooleanField(verbose_name='Enable/Disable')),
            ],
            options={
                'verbose_name': 'Language',
                'db_table': 'ts_languages',
            },
        ),
        migrations.CreateModel(
            name='LanguageSet',
            fields=[
                ('lang_set_id', models.AutoField(primary_key=True, serialize=False)),
                ('lang_set_name', models.CharField(max_length=1000, verbose_name='Language Set Name')),
                ('lang_set_slug', models.CharField(max_length=400, unique=True, verbose_name='Language Set SLUG')),
                ('lang_set_color', models.CharField(max_length=100, unique=True, verbose_name='Tag Colour')),
                ('locale_ids', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=50), default=list, null=True, size=None, verbose_name='Locale IDs')),
            ],
            options={
                'verbose_name': 'Language Set',
                'db_table': 'ts_langset',
            },
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('package_id', models.AutoField(primary_key=True, serialize=False)),
                ('package_name', models.CharField(max_length=1000, unique=True, verbose_name='Package Name')),
                ('upstream_name', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Upstream Name')),
                ('component', models.CharField(blank=True, max_length=200, null=True, verbose_name='Component')),
                ('upstream_url', models.URLField(max_length=2000, unique=True, verbose_name='Upstream URL')),
                ('platform_name', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Package Name at Translation Platform')),
                ('platform_url', models.URLField(blank=True, max_length=500, null=True, verbose_name='Translation Platform Project URL')),
                ('products', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=400), default=list, null=True, size=None, verbose_name='Release Streams')),
                ('package_details_json_str', models.TextField(blank=True, null=True)),
                ('details_json_last_updated', models.DateTimeField(null=True)),
                ('package_name_mapping_json_str', models.TextField(blank=True, null=True)),
                ('name_map_last_updated', models.DateTimeField(blank=True, null=True)),
                ('release_branch_mapping', models.TextField(blank=True, null=True)),
                ('release_branch_map_last_updated', models.DateTimeField(blank=True, null=True)),
                ('stats_diff', models.TextField(blank=True, null=True)),
                ('stats_diff_last_updated', models.DateTimeField(blank=True, null=True)),
                ('platform_last_updated', models.DateTimeField(blank=True, null=True)),
                ('upstream_last_updated', models.DateTimeField(blank=True, null=True)),
                ('downstream_last_updated', models.DateTimeField(blank=True, null=True)),
                ('translation_file_ext', models.CharField(blank=True, default='po', max_length=10, null=True, verbose_name='Translation Format (po)')),
                ('created_by', models.EmailField(max_length=254, null=True)),
                ('maintainers', models.TextField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Package',
                'db_table': 'ts_packages',
            },
        ),
        migrations.CreateModel(
            name='PackageSet',
            fields=[
                ('package_set_id', models.AutoField(primary_key=True, serialize=False)),
                ('package_set_name', models.CharField(max_length=1000, verbose_name='Package Set Name')),
                ('package_set_slug', models.CharField(max_length=400, unique=True, verbose_name='Package Set SLUG')),
                ('package_set_color', models.CharField(max_length=100, unique=True, verbose_name='Tag Colour')),
                ('packages', models.TextField(blank=True, null=True, verbose_name='Packages')),
            ],
            options={
                'verbose_name': 'Package Set',
                'db_table': 'ts_packageset',
            },
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('platform_id', models.AutoField(primary_key=True, serialize=False)),
                ('engine_name', models.CharField(max_length=200, verbose_name='Platform Engine')),
                ('subject', models.CharField(max_length=200, null=True, verbose_name='Platform Subject')),
                ('api_url', models.URLField(max_length=500, unique=True, verbose_name='Server URL')),
                ('platform_slug', models.CharField(max_length=400, unique=True, verbose_name='Platform SLUG')),
                ('server_status', models.BooleanField(verbose_name='Enable/Disable')),
                ('projects_json_str', models.TextField(blank=True, null=True)),
                ('projects_last_updated', models.DateTimeField(null=True)),
                ('auth_login_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='Auth User')),
                ('auth_token_key', models.CharField(blank=True, max_length=200, null=True, verbose_name='Auth Token')),
            ],
            options={
                'verbose_name': 'Translation Platform',
                'db_table': 'ts_platforms',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.AutoField(primary_key=True, serialize=False)),
                ('product_name', models.CharField(max_length=200, verbose_name='Product Name')),
                ('product_slug', models.CharField(max_length=400, unique=True, verbose_name='Product SLUG')),
                ('product_server', models.URLField(max_length=500, unique=True, verbose_name='Product Server')),
                ('product_build_system', models.CharField(max_length=200, null=True, verbose_name='Release Build System')),
                ('product_build_tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200), default=list, null=True, size=None, verbose_name='Release Build Tags')),
                ('product_build_tags_last_updated', models.DateTimeField(null=True)),
                ('src_pkg_format', models.CharField(max_length=50, null=True, verbose_name='Source Package Format')),
                ('top_url', models.URLField(max_length=500, unique=True, verbose_name='Top URL')),
                ('web_url', models.URLField(max_length=500, null=True, unique=True, verbose_name='Web URL')),
                ('krb_service', models.CharField(blank=True, max_length=200, null=True, verbose_name='Kerberos Service')),
                ('auth_type', models.CharField(blank=True, max_length=200, null=True, verbose_name='Auth Type')),
                ('amqp_server', models.CharField(blank=True, max_length=500, null=True, verbose_name='AMQP Server')),
                ('msgbus_exchange', models.CharField(blank=True, max_length=200, null=True, verbose_name='Message Bus Exchange')),
                ('major_milestones', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=1000), default=list, null=True, size=None, verbose_name='Major Milestones')),
                ('product_phases', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, max_length=200), default=list, null=True, size=None, verbose_name='Release Stream Phases')),
                ('product_status', models.BooleanField(verbose_name='Enable/Disable')),
            ],
            options={
                'verbose_name': 'Product',
                'db_table': 'ts_products',
            },
        ),
        migrations.CreateModel(
            name='Release',
            fields=[
                ('release_id', models.AutoField(primary_key=True, serialize=False)),
                ('release_name', models.CharField(max_length=500, verbose_name='Release Name')),
                ('release_slug', models.CharField(max_length=500, unique=True, verbose_name='Release SLUG')),
                ('scm_branch', models.CharField(blank=True, max_length=100, null=True, verbose_name='SCM Branch Name')),
                ('created_on', models.DateTimeField()),
                ('current_phase', models.CharField(max_length=200, null=True, verbose_name='Current Phase')),
                ('calendar_url', models.URLField(max_length=500, null=True, unique=True, verbose_name='Calender iCal URL')),
                ('schedule_json_str', models.TextField(blank=True, null=True)),
                ('sync_calendar', models.BooleanField(default=True, verbose_name='Sync Calender')),
                ('notifications_flag', models.BooleanField(default=True, verbose_name='Notification')),
                ('track_trans_flag', models.BooleanField(default=True, verbose_name='Track Translation')),
                ('created_by', models.EmailField(max_length=254, null=True)),
                ('language_set_slug', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dashboard.LanguageSet', to_field='lang_set_slug', verbose_name='Language Set')),
                ('product_slug', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dashboard.Product', to_field='product_slug', verbose_name='Product')),
            ],
            options={
                'verbose_name_plural': 'Release',
                'db_table': 'ts_releases',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('reports_id', models.AutoField(primary_key=True, serialize=False)),
                ('report_subject', models.CharField(max_length=200, unique=True)),
                ('report_json_str', models.TextField(blank=True, null=True)),
                ('report_updated', models.DateTimeField(null=True)),
            ],
            options={
                'verbose_name': 'Report',
                'db_table': 'ts_reports',
            },
        ),
        migrations.CreateModel(
            name='SyncStats',
            fields=[
                ('sync_id', models.AutoField(primary_key=True, serialize=False)),
                ('job_uuid', models.UUIDField()),
                ('project_version', models.CharField(max_length=500, null=True)),
                ('source', models.CharField(max_length=500, null=True)),
                ('stats_raw_json_str', models.TextField(blank=True, null=True)),
                ('stats_processed_json_str', models.TextField(blank=True, null=True)),
                ('sync_iter_count', models.IntegerField()),
                ('sync_visibility', models.BooleanField()),
                ('package_name', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dashboard.Package', to_field='package_name', verbose_name='Package')),
            ],
            options={
                'db_table': 'ts_syncstats',
            },
        ),
        migrations.CreateModel(
            name='Visitor',
            fields=[
                ('visitor_id', models.AutoField(primary_key=True, serialize=False)),
                ('visitor_ip', models.GenericIPAddressField()),
                ('visitor_user_agent', models.CharField(max_length=500)),
                ('visitor_accept', models.CharField(blank=True, max_length=500, null=True)),
                ('visitor_encoding', models.CharField(blank=True, max_length=500, null=True)),
                ('visitor_language', models.CharField(blank=True, max_length=500, null=True)),
                ('visitor_host', models.CharField(blank=True, max_length=500, null=True)),
                ('first_visit_time', models.DateTimeField()),
                ('last_visit_time', models.DateTimeField()),
            ],
            options={
                'verbose_name': 'Visitors',
                'db_table': 'ts_visitors',
            },
        ),
        migrations.AddField(
            model_name='package',
            name='platform_slug',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dashboard.Platform', to_field='platform_slug', verbose_name='Translation Platform'),
        ),
        migrations.AddField(
            model_name='job',
            name='job_template',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='dashboard.JobTemplate', verbose_name='Job Template'),
        ),
        migrations.AddField(
            model_name='graphrule',
            name='rule_release_slug',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='dashboard.Release', to_field='release_slug', verbose_name='Graph Rule for Release'),
        ),
    ]
